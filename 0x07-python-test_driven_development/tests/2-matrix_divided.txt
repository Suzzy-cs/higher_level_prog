=============================
How to Use 2-matrix_divided.py
==============================

matrix_divided() divides all elements of a matrix with a constant element

::
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::
    original matrix is left unchanged
    
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

::
    floats and integers can be combined

    >>> matrix = [
    ...     [1, -2.2, 3, 4.4, 5],
    ...     [-6.6, 7.00, 8, 9.999, 10]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

::
    >>> matrix = "hello"
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = None
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

::
    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7, 8]
    ... ]
    >>> print(matrix_divided(matrix, "mouse"))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

::
    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7, 8]
    ... ]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero


















